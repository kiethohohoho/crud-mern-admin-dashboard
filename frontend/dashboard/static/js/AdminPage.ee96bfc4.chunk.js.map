{"version":3,"sources":["context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","redux/crud/actions.js","redux/crud/selectors.js","utils/uinqueId.js","request/request.js","redux/auth/actions.js","components/Loading/index.jsx","utils/helpers.js","layout/DefaultLayout/index.jsx","layout/HeaderContent/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/DashboardLayout/index.jsx","components/CreateForm/index.jsx","components/UpdateForm/index.jsx","components/DeleteModal/index.jsx","components/ReadItem/index.jsx","components/SearchItem/index.jsx","components/DataTable/index.jsx","../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js","modules/AdminCrudModule/AdminDataTable.jsx","modules/AdminCrudModule/UpdatePassword.jsx","hooks/useOnFetch/index.jsx","modules/AdminCrudModule/index.jsx","forms/AdminForm.jsx","pages/Admin.jsx"],"names":["OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","actionTypes","Error","contextActions","dispatch","modal","open","close","advancedBox","editBox","panel","collapse","collapsedBox","readBox","console","log","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","children","useReducer","value","useMemo","Provider","useCrudContext","context","useContext","undefined","crudContextAction","crudContextSelector","crud","resetState","resetAction","actionType","keyState","payload","currentItem","data","currentAction","list","entity","currentPage","request","page","success","result","items","pagination","current","parseInt","pageSize","total","count","create","jsonData","read","itemId","update","delete","search","source","option","cancel","selectCrud","selectCurrentItem","createSelector","selectListItems","selectItemById","find","item","_id","selectCreatedItem","selectUpdatedItem","selectDeletedItem","selectSearchedItems","uniqueId","idstr","String","fromCharCode","Math","floor","random","ascicodeChar","length","headersInstance","ACCESS_TOKEN_NAME","tokenCookies","get","axiosInstance","axios","baseURL","API_BASE_URL","timeout","headers","defaults","post","response","successHandler","errorHandler","id","patch","filter","equal","query","fields","question","cancelToken","token","entityUrl","CancelToken","login","loginAdminData","loading","authService","authValue","admin","isLoggedIn","storePersist","set","history","push","logout","Loading","isLoading","antIcon","style","fontSize","spin","indicator","spinning","valueByString","obj","string","devider","split","map","key","reduce","o","x","join","Object","byString","s","a","replace","i","n","k","DefaultLayout","Header","Layout","HeaderContent","useDispatch","menu","Item","onClick","target","rel","href","className","padding","background","overlay","placement","arrow","icon","UserOutlined","CollapseBoxButton","onChange","title","TopCollapseBox","isOpen","show","display","opacity","span","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","isDiplayed","width","marginLeft","Sider","SidePanel","config","fixHeaderPanel","ADD_NEW_ENTITY","useState","styleSider","setStyleSider","opacitySider","setOpacitySider","useEffect","setTimeout","trigger","MenuOutlined","collapsible","collapsedWidth","zeroWidthTriggerStyle","right","top","left","Content","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","margin","maxWidth","DashboardLayout","CreateForm","formElements","useSelector","isSuccess","Form","useForm","form","resetFields","layout","onFinish","fieldsValue","birthday","format","date","htmlType","UpdateForm","dayjs","setFieldsValue","DeleteModal","entityDisplayLabels","deleteMessage","modalTitle","displayItem","setDisplayItem","labels","visible","onOk","onCancel","confirmLoading","ReadItem","readColumns","currentResult","listState","setListState","isFirstRun","useRef","props","propsKey","dataIndex","propsTitle","label","itemsList","gutter","SearchItem","searchConfig","displayLabels","searchFields","outputValue","setValue","options","setOptions","isTyping","delayTimer","optionResults","onSelect","onSearch","searchText","clearTimeout","currentValue","notFoundContent","allowClear","placeholder","suffix","DataTable","DropDownRowMenu","AddNewItem","dataTableColumns","dataTableTitle","render","row","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","onBack","window","back","ghost","extra","columns","rowKey","dataSource","LockOutlined","ref","React","AntdIcon","_objectSpread","LockOutlinedSvg","displayName","minWidth","EyeOutlined","EditOutlined","DeleteOutlined","AdminCrudModule","UpdatePassword","setResult","setIsSuccess","setIsLoading","onFetch","fetchingFn","useOnFetch","name","rules","required","message","len","prefix","autoComplete","SidePanelTopContent","FixHeaderPanel","marginBottom","panelTitle","block","PlusOutlined","createForm","updateForm","useLayoutEffect","AdminForm","isUpdateForm","Admin","ENTITY_NAME","CREATE_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE"],"mappings":"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","file":"static/js/AdminPage.ee96bfc4.chunk.js","sourcesContent":["export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_ADVANCED_BOX = \"OPEN_ADVANCED_BOX\";\nexport const CLOSE_ADVANCED_BOX = \"CLOSE_ADVANCED_BOX\";\n\nexport const OPEN_EDIT_BOX = \"OPEN_EDIT_BOX\";\nexport const CLOSE_EDIT_BOX = \"CLOSE_EDIT_BOX\";\n\nexport const OPEN_PANEL = \"OPEN_PANEL\";\nexport const CLOSE_PANEL = \"CLOSE_PANEL\";\nexport const COLLAPSE_PANEL = \"COLLAPSE_PANEL\";\n\nexport const OPEN_BOX = \"OPEN_BOX\";\nexport const CLOSE_BOX = \"CLOSE_BOX\";\nexport const COLLAPSE_BOX = \"COLLAPSE_BOX\";\n\nexport const OPEN_READ_BOX = \"OPEN_READ_BOX\";\nexport const CLOSE_READ_BOX = \"CLOSE_READ_BOX\";\nexport const COLLAPSE_READ_BOX = \"COLLAPSE_READ_BOX\";\n","import * as actionTypes from \"./types\";\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: !state.isPanelCollapsed,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from \"./types\";\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n        console.log(\"readBox open\");\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n        console.log(\"readBox close\");\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","import * as actionTypes from \"./types\";\nimport { request } from \"@/request\";\n\nexport const crud = {\n  resetState: () => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_STATE,\n    });\n  },\n  resetAction: (actionType) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_ACTION,\n      keyState: actionType,\n      payload: null,\n    });\n  },\n  currentItem: (data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ITEM,\n      payload: { ...data },\n    });\n  },\n  currentAction: (actionType, data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ACTION,\n      keyState: actionType,\n      payload: { ...data },\n    });\n  },\n  list: (entity, currentPage = 1) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"list\",\n      payload: null,\n    });\n\n    let data = await request.list(entity, { page: currentPage });\n\n    if (data.success === true) {\n      const result = {\n        items: data.result,\n        pagination: {\n          current: parseInt(data.pagination.page, 10),\n          pageSize: 10,\n          total: parseInt(data.pagination.count, 10),\n        },\n      };\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"list\",\n        payload: result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"list\",\n        payload: null,\n      });\n    }\n  },\n  create: (entity, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"create\",\n      payload: null,\n    });\n    console.log(\"jsonData action redux\", jsonData);\n    let data = await request.create(entity, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"create\",\n        payload: data.result,\n      });\n\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"create\",\n        payload: null,\n      });\n    }\n  },\n  read: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"read\",\n      payload: null,\n    });\n\n    let data = await request.read(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"read\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"read\",\n        payload: null,\n      });\n    }\n  },\n  update: (entity, itemId, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"update\",\n      payload: null,\n    });\n\n    let data = await request.update(entity, itemId, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"update\",\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"update\",\n        payload: null,\n      });\n    }\n  },\n\n  delete: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"delete\",\n      payload: null,\n    });\n\n    let data = await request.delete(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"delete\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"delete\",\n        payload: null,\n      });\n    }\n  },\n\n  search: (entity, source, option) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"search\",\n      payload: null,\n    });\n\n    source.cancel();\n\n    source = request.source();\n    let data = await request.search(entity, source, option);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"search\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"search\",\n        payload: null,\n      });\n    }\n  },\n};\n","import { createSelector } from \"reselect\";\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector(\n  [selectCrud],\n  (crud) => crud.current\n);\n\nexport const selectListItems = createSelector(\n  [selectCrud],\n  (crud) => crud.list\n);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) =>\n    list.result.items.find((item) => item._id === itemId)\n  );\n\nexport const selectCreatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.create\n);\n\nexport const selectUpdatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.update\n);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.delete\n);\n\nexport const selectSearchedItems = createSelector(\n  [selectCrud],\n  (crud) => crud.search\n);\n","export default function uniqueId() {\n  // always start with a letter (for DOM friendlyness)\n  let idstr = String.fromCharCode(Math.floor(Math.random() * 25 + 65));\n  do {\n    // between numbers and characters (48 is 0 and 90 is Z (42-48 = 90)\n    const ascicodeChar = Math.floor(Math.random() * 25 + 65);\n    idstr += String.fromCharCode(ascicodeChar);\n    idstr += Math.floor(Math.random() * 99);\n  } while (idstr.length < 8);\n\n  return idstr;\n}\n","import axios from \"axios\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\nimport { token as tokenCookies } from \"@/auth\";\nimport errorHandler from \"./errorHandler\";\nimport successHandler from \"./successHandler\";\n\nconst headersInstance = { [ACCESS_TOKEN_NAME]: tokenCookies.get() };\n\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    ...headersInstance,\n  },\n});\n\nconst request = {\n  create: async (entity, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    console.log(\"jsonData\", jsonData);\n    try {\n      const response = await axiosInstance.post(entity + \"/create\", jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async (entity, id) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.get(entity + \"/read/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async (entity, id, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.patch(\n        entity + \"/update/\" + id,\n        jsonData\n      );\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  delete: async (entity, id, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.delete(entity + \"/delete/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  filter: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      let filter = option.filter ? \"filter=\" + option.filter : \"\";\n      let equal = option.equal ? \"&equal=\" + option.equal : \"\";\n      let query = `?${filter}${equal}`;\n\n      const response = await axiosInstance.get(entity + \"/filter\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  search: async (entity, source, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\n    };\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let fields = option.fields ? \"fields=\" + option.fields : \"\";\n        let question = option.question ? \"&q=\" + option.question : \"\";\n        query = `?${fields}${question}`;\n      }\n      // headersInstance.cancelToken = source.token;\n      const response = await axiosInstance.get(entity + \"/search\" + query, {\n        cancelToken: source.token,\n      });\n\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  list: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\n    };\n    console.log(tokenCookies.get());\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let page = option.page ? \"page=\" + option.page : \"\";\n        let items = option.items ? \"&items=\" + option.items : \"\";\n        query = `?${page}${items}`;\n      }\n\n      const response = await axiosInstance.get(entity + \"/list\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  post: async (entityUrl, jsonData, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.post(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async (entityUrl) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.get(entityUrl);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async (entityUrl, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.patch(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  source: () => {\n    // const CancelToken = await axiosInstance.CancelToken;\n\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  },\n};\nexport default request;\n","import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\n\nexport const login = (loginAdminData) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: { loading: true },\n  });\n  const data = await authService.login(loginAdminData);\n\n  if (data.success === true) {\n    const authValue = {\n      current: data.result.admin,\n      loading: false,\n      isLoggedIn: true,\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.admin,\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS,\n  });\n  history.push(\"/login\");\n};\n","import React from \"react\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import { parse } from \"querystring\";\nfunction getPageQuery() {\n  parse(window.location.href.split(\"?\")[1]);\n}\n\n/* \n To get nested object properties.\n admin = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(admin, 'location.lat')     // 50\n get(admin, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split(\".\").reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n  s = s.replace(/^\\./, \"\"); // strip a leading dot\n  let a = s.split(\".\");\n  for (let i = 0, n = a.length; i < n; ++i) {\n    let k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split(\".\").every(function (x) {\n    if (typeof obj !== \"object\" || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = \"|\";\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(\" \");\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  let formData = new FormData();\n  const elements = form.querySelectorAll(\"input, select, textarea\");\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== \"true\") {\n      if (element.type === \"file\") {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display admin\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\n/*\n Format Datetime to display admin\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + \" \" + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll(\"[data-property]\").forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    console.log({ type });\n    switch (type) {\n      case \"date\":\n        value = formatDate(value);\n        break;\n\n      case \"datetime\":\n        value = formatDatetime(value);\n        break;\n\n      case \"currency\":\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","import React from \"react\";\n\nimport { CrudContextProvider } from \"@/context/crud\";\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Layout, Avatar, Menu, Dropdown } from \"antd\";\n\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { logout } from \"@/redux/auth/actions\";\nimport uniqueId from \"@/utils/uinqueId\";\nconst { Header } = Layout;\n\nexport default function HeaderContent() {\n  const dispatch = useDispatch();\n\n  const menu = (\n    <Menu>\n      <Menu.Item key={`${uniqueId()}`} onClick={() => dispatch(logout())}>\n        logout\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`}>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.taobao.com/\"\n        >\n          2nd menu item\n        </a>\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`}>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.tmall.com/\"\n        >\n          3rd menu item\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Header\n      className=\"site-layout-background\"\n      style={{ padding: 0, background: \"none\" }}\n    >\n      <Dropdown overlay={menu} placement=\"bottomRight\" arrow>\n        <Avatar icon={<UserOutlined />} />\n      </Dropdown>\n    </Header>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"none\", opacity: 0 }\n    : { display: \"block\", opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n  isPanelCollapsed,\n}) {\n  const collapsed = isCollapsed ? \"collapsed\" : \"\";\n  const isDiplayed = isPanelCollapsed ? \"-400px\" : \"0px\";\n  return (\n    <div\n      className=\"panelBox\"\n      style={{ width: \"400px\", marginLeft: isDiplayed }}\n    >\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={\"collapseBox \" + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>\n          {bottomContent}\n        </BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { Layout } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport CollapseBox from \"../CollapseBox\";\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({\n  config,\n  topContent,\n  bottomContent,\n  fixHeaderPanel,\n}) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelCollapsed, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [styleSider, setStyleSider] = useState(\"0px\");\n  const [opacitySider, setOpacitySider] = useState(\"1\");\n\n  useEffect(() => {\n    if (isPanelCollapsed) {\n      setStyleSider(\"-400px\");\n      setOpacitySider(0);\n    } else {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }\n\n    setTimeout(() => {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }, 300);\n  }, [isPanelCollapsed]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      trigger={<MenuOutlined className=\"trigger\" />}\n      width={400}\n      collapsible\n      collapsed={isPanelCollapsed}\n      collapsedWidth={\"0px\"}\n      onCollapse={collapsePanel}\n      zeroWidthTriggerStyle={{\n        right: \"-50px\",\n        top: \"15px\",\n      }}\n      style={{\n        background: \"#FFF\",\n        left: styleSider,\n        opacity: opacitySider,\n      }}\n    >\n      {fixHeaderPanel}\n      <CollapseBox\n        buttonTitle={ADD_NEW_ENTITY}\n        isPanelCollapsed={isPanelCollapsed}\n        isCollapsed={isBoxCollapsed}\n        onCollapse={collapsePanelBox}\n        topContent={topContent}\n        bottomContent={bottomContent}\n      ></CollapseBox>\n    </Sider>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport SidePanel from \"@/components/SidePanel\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <DefaultLayout>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SidePanel\n          config={config}\n          topContent={sidePanelTopContent}\n          bottomContent={sidePanelBottomContent}\n          fixHeaderPanel={fixHeaderPanel}\n        ></SidePanel>\n        <Layout className=\"site-layout\">\n          <HeaderContent />\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: \"50px 40px\",\n              margin: \"50px auto\",\n              width: \"100%\",\n              maxWidth: \"1000px\",\n            }}\n          >\n            {children}\n          </Content>\n        </Layout>\n      </Layout>\n    </DefaultLayout>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <HeaderContent />\n      <Content\n        style={{\n          padding: \"30px 40px\",\n          margin: \"20px auto\",\n          width: \"100%\",\n          maxWidth: \"1100px\",\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCreatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nexport default function CreateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n  const onSubmit = (fieldsValue) => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n      if (fieldsValue.date) {\n        fieldsValue = {\n          ...fieldsValue,\n          date: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n    }\n\n    dispatch(crud.create(entity, fieldsValue));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"create\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n        {formElements}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Loading>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nexport default function UpdateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n  const { state, crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const [form] = Form.useForm();\n\n  const onSubmit = (fieldsValue) => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n      if (fieldsValue.date) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n    }\n\n    const id = current._id;\n    dispatch(crud.update(entity, id, fieldsValue));\n  };\n  useEffect(() => {\n    if (current) {\n      if (current.birthday) {\n        current.birthday = dayjs(current.birthday);\n      }\n      if (current.date) {\n        current.date = dayjs(current.date);\n      }\n      form.setFieldsValue(current);\n    }\n  }, [current]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  const { isEditBoxOpen } = state;\n\n  const show = isEditBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectDeletedItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function DeleteModal({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = \"Do you want delete : \",\n    modalTitle = \"Remove Item\",\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState(\"\");\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list(entity));\n      dispatch(crud.resetAction(entity));\n    }\n    if (current) {\n      let labels = entityDisplayLabels\n        .map((x) => valueByString(current, x))\n        .join(\" \");\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current._id;\n    dispatch(crud.delete(entity, id));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function ReadItem({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    console.log(\"currentResult :\", currentResult);\n    console.log(\"readColumns :\", readColumns);\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const value = valueByString(currentResult, propsKey);\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  console.log(\"itemsList :\", itemsList);\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { AutoComplete, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { request } from \"@/request\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectSearchedItems } from \"@/redux/crud/selectors\";\n\nimport { Empty } from \"antd\";\n\nexport default function SearchItem({ config }) {\n  let { entity, searchConfig } = config;\n\n  const { displayLabels, searchFields, outputValue = \"_id\" } = searchConfig;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const [options, setOptions] = useState([]);\n\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  let source = request.source();\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n\n  const isTyping = useRef(false);\n\n  let delayTimer = null;\n  useEffect(() => {\n    isLoading && setOptions([{ label: \"... Searching\" }]);\n  }, [isLoading]);\n  const onSearch = (searchText) => {\n    isTyping.current = true;\n\n    clearTimeout(delayTimer);\n    delayTimer = setTimeout(function () {\n      if (isTyping.current && searchText !== \"\") {\n        dispatch(\n          crud.search(entity, source, {\n            question: searchText,\n            fields: searchFields,\n          })\n        );\n      }\n      isTyping.current = false;\n    }, 500);\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n\n    dispatch(crud.currentItem(currentItem));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n\n  const onChange = (data) => {\n    const currentItem = options.find((item) => {\n      return item.value === data;\n    });\n    const currentValue = currentItem ? currentItem.label : data;\n    setValue(currentValue);\n  };\n\n  useEffect(() => {\n    let optionResults = [];\n\n    result.map((item) => {\n      const labels = displayLabels.map((x) => item[x]).join(\" \");\n      optionResults.push({ label: labels, value: item[outputValue] });\n    });\n\n    setOptions(optionResults);\n  }, [result]);\n\n  return (\n    <AutoComplete\n      value={value}\n      options={options}\n      style={{\n        width: \"100%\",\n      }}\n      onSelect={onSelect}\n      onSearch={onSearch}\n      onChange={onChange}\n      notFoundContent={!isSuccess ? <Empty /> : \"\"}\n      allowClear={true}\n      placeholder=\"Your Search here\"\n    >\n      <Input suffix={<SearchOutlined />} />\n    </AutoComplete>\n  );\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { Dropdown, Button, PageHeader, Table } from \"antd\";\n\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectListItems } from \"@/redux/crud/selectors\";\n\nimport uniqueId from \"@/utils/uinqueId\";\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  let { entity, dataTableColumns, dataTableTitle } = config;\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: \"\",\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\n          <EllipsisOutlined style={{ cursor: \"pointer\", fontSize: \"24px\" }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(\n    selectListItems\n  );\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    dispatch(crud.list(entity, pagination.current));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list(entity));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: \"20px 0px\",\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);","import React from \"react\";\n\nimport { Button, Menu } from \"antd\";\nimport {\n  EyeOutlined,\n  EditOutlined,\n  LockOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectItemById } from \"@/redux/crud/selectors\";\nimport { useCrudContext } from \"@/context/crud\";\nimport uniqueId from \"@/utils/uinqueId\";\nimport DataTable from \"@/components/DataTable\";\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const {\n    panel,\n    collapsedBox,\n    modal,\n    advancedBox,\n    readBox,\n    editBox,\n  } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem(item));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentAction(\"update\", item));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function UpdatePassword() {\n    dispatch(crud.currentAction(\"update\", item));\n    advancedBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction(\"delete\", item));\n    modal.open();\n  }\n  return (\n    <Menu style={{ minWidth: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<LockOutlined />}\n        onClick={UpdatePassword}\n      >\n        Update Password\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<DeleteOutlined />}\n        onClick={Delete}\n      >\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function AdminCrudModule({ config }) {\n  return (\n    <DataTable\n      config={config}\n      DropDownRowMenu={DropDownRowMenu}\n      AddNewItem={AddNewItem}\n    />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form, Input } from \"antd\";\nimport { LockOutlined } from \"@ant-design/icons\";\nimport Loading from \"@/components/Loading\";\nimport useOnFetch from \"@/hooks/useOnFetch\";\nimport { request } from \"@/request\";\n\nexport default function UpdatePassword({ config }) {\n  const dispatch = useDispatch();\n  const { current } = useSelector(selectUpdatedItem);\n\n  const { state } = useCrudContext();\n\n  const [form] = Form.useForm();\n\n  const { onFetch, result, isLoading, isSuccess } = useOnFetch();\n\n  const handelSubmit = (fieldsValue) => {\n    const id = current._id;\n    const updateFn = () => {\n      return request.patch(\"admin/password-update/\" + id, fieldsValue);\n    };\n    onFetch(updateFn);\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      // readBox.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n    }\n  }, [isSuccess]);\n\n  const { isAdvancedBoxOpen } = state;\n\n  const show = isAdvancedBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <h3>Update Password</h3>\n        <div className=\"space\"></div>\n        <Form form={form} layout=\"vertical\" onFinish={handelSubmit}>\n          <Form.Item\n            label=\"New Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Password!\",\n                len: 8,\n              },\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              autoComplete=\"off\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Update\n            </Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function useOnFetch() {\n  const [result, setResult] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onFetch = async (fetchingFn) => {\n    setIsLoading(true);\n\n    const data = await fetchingFn();\n    if (data.success === true) {\n      setIsSuccess(true);\n      setResult(data.result);\n    }\n    setIsLoading(false);\n  };\n\n  return { onFetch, result, isSuccess, isLoading };\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport CreateForm from \"@/components/CreateForm\";\nimport UpdateForm from \"@/components/UpdateForm\";\nimport DeleteModal from \"@/components/DeleteModal\";\nimport ReadItem from \"@/components/ReadItem\";\nimport SearchItem from \"@/components/SearchItem\";\n\nimport { useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\n\nimport { CrudLayout } from \"@/layout\";\n\nimport AdminDataTable from \"./AdminDataTable\";\nimport UpdatePassword from \"./UpdatePassword\";\n\nfunction SidePanelTopContent({ config, formElements }) {\n  return (\n    <>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n      <UpdatePassword config={config} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>\n            {config.panelTitle}\n          </h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button\n            onClick={addNewItem}\n            block={true}\n            icon={<PlusOutlined />}\n          ></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction AdminCrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={\n        <CreateForm config={config} formElements={createForm} />\n      }\n      sidePanelTopContent={\n        <SidePanelTopContent config={config} formElements={updateForm} />\n      }\n    >\n      <AdminDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n\nexport default AdminCrudModule;\n","import React from \"react\";\nimport { Form, Input, Select } from \"antd\";\n\nexport default function AdminForm({ isUpdateForm = false }) {\n  return (\n    <>\n      <Form.Item\n        label=\"E-mail\"\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Email!\",\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n      {!isUpdateForm && (\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Password!\",\n            },\n          ]}\n        >\n          <Input type=\"password\" autoComplete=\"off\" />\n        </Form.Item>\n      )}\n\n      <Form.Item\n        label=\"name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n      <Form.Item\n        label=\"surname\"\n        name=\"surname\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport AdminCrudModule from \"@/modules/AdminCrudModule\";\nimport AdminForm from \"@/forms/AdminForm\";\n\nexport default function Admin() {\n  const entity = \"admin\";\n  const searchConfig = {\n    displayLabels: [\"name\", \"surname\"],\n    searchFields: \"email,name,surname\",\n    outputValue: \"_id\",\n  };\n\n  const panelTitle = \"Admin Panel\";\n  const dataTableTitle = \"Admin Lists\";\n  const entityDisplayLabels = [\"email\"];\n\n  const readColumns = [\n    { title: \"Name\", dataIndex: \"name\" },\n    { title: \"Surname\", dataIndex: \"surname\" },\n    { title: \"Email\", dataIndex: \"email\" },\n  ];\n\n  const dataTableColumns = [\n    { title: \"Name\", dataIndex: \"name\" },\n    { title: \"Surname\", dataIndex: \"surname\" },\n    { title: \"Email\", dataIndex: \"email\" },\n  ];\n  const ADD_NEW_ENTITY = \"Add new admin\";\n  const DATATABLE_TITLE = \"Admins List\";\n  const ENTITY_NAME = \"admin\";\n  const CREATE_ENTITY = \"Create admin\";\n  const UPDATE_ENTITY = \"Update admin\";\n\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <AdminCrudModule\n      createForm={<AdminForm />}\n      updateForm={<AdminForm isUpdateForm={true} />}\n      config={config}\n    />\n  );\n}\n"],"sourceRoot":""}